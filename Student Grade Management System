def input_grades(name):
    grades = {}
    for grade_type in ['activities', 'quizzes', 'exam']:
        while True:
            try:
                grade = float(input(f"Enter {name}'s {grade_type} grade: "))
                if 0 <= grade <= 100:
                    grades[grade_type] = grade
                    break
                else:
                    print("Invalid grade. Please enter a value between 0 and 100.")
            except ValueError:
                print("Invalid input. Please enter a numeric value.")
    return grades

def calculate_overall_grade(grades):
    weights = {'activities': 0.3, 'quizzes': 0.3, 'exam': 0.4}
    return sum(grades[grade] * weights[grade] for grade in grades)

def calculate_number_grade(overall_grade):
    if overall_grade >= 96.0:
        return "1.00"
    elif overall_grade >= 91.5:
        return "1.25"
    elif overall_grade >= 87.0:
        return "1.50"
    elif overall_grade >= 82.5:
        return "1.75"
    elif overall_grade >= 78.0:
        return "2.00"
    elif overall_grade >= 73.5:
        return "2.25"
    elif overall_grade >= 69.0:
        return "2.50"
    elif overall_grade >= 64.5:
        return "2.75"
    elif overall_grade >= 60.0:
        return "3.00"
    elif overall_grade >= 1:
        return "5.00"
    elif overall_grade == 0:
        return "O"
    else:
        return "F"

def display_remarks(overall_grade):
    if overall_grade >= 60.0:
        return "Passed"
    elif overall_grade >= 1:
        return "Failed"
    elif overall_grade == 0:
        return "INC"

def display_report(student):
    name, grades, overall_grade, number_grade, remarks = (
    student['name'], student['grades'], student['overall_grade'], student['number_grade'], student["remarks"])
    report = f"\n--- Report for {name} ---\n"
    report += "\n".join(f"{grade.capitalize()} Grade: {value}" for grade, value in grades.items())
    report += f"\nOverall Grade: {overall_grade:.2f}\nNumber Grade: {number_grade}\nRemarks:{remarks}\n"
    print(report)

def add_student(students):
    name = input("Enter student's name: ")
    grades = input_grades(name)
    overall_grade = calculate_overall_grade(grades)
    number_grade = calculate_number_grade(overall_grade)
    remarks = display_remarks(overall_grade)
    students.append({'name': name, 'grades': grades, 'overall_grade': overall_grade, 'number_grade': number_grade,
                     'remarks': remarks})
    print(f"Student {name} added successfully!")
    return students

def generate_reports(students):
    if not students:
        print("No students available to generate reports.")
    else:
        for student in students:
            display_report(student)

def display_rankings(students):
    if not students:
        print("No students available to rank.")
        return
    sorted_students = sorted(students, key=lambda s: s['overall_grade'], reverse=True)
    print("\n--------------------       Student Rankings         --------------------")
    for i, student in enumerate(sorted_students, 1):
        print(f"{i}. {student['name']} - Overall Grade: {student['overall_grade']:.2f} ({student['number_grade']})")
    print()

def main_menu():
    students = []
    while True:
        print(
            "\n--------------------------------------------------------------------------                     Student Grade Management System                     --------------------------------------------------------------------")
        print("1. Add Student\n2. Generate Reports\n3. Display Rankings\n4. Exit")
        choice = input("Select an option (1-4): ")
        if choice == '1':
            add_student(students)
        elif choice == '2':
            generate_reports(students)
        elif choice == '3':
            display_rankings(students)
        elif choice == '4':
            print("Exiting the system. Thankyou and Goodbye!")
            exit()
        else:
            print("Invalid option. Please try again.")


if __name__ == "__main__":
    main_menu()
